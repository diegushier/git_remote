#!/usr/bin/env bash
 
#	 ___ _   _ ____ _____  _    _     _     
#	|_ _| \ | / ___|_   _|/ \  | |   | |    
#	 | ||  \| \___ \ | | / _ \ | |   | |    
#	 | || |\  |___) || |/ ___ \| |___| |___ 
#	|___|_| \_|____/ |_/_/   \_\_____|_____|
# ====================================================                                

. $(pwd)/installer/var

checkers() {
	if [ -z $( expect -v &> /dev/null) ]; then dep=True; fi;

	if [ -f $location/$file ]; then git_remote=True; fi;

	if [ -f $location/var/.env ]; then env_file=True; fi;
}

create_script(){
	cd $location
	cat << 'EOF' > git_remote
#!/bin/bash
. var/.env
repository=$1

cd

if [ -z $(grep helper .gitconfig &> /dev/null) ]; then
	cd -
	git clone $repository
	exit 0
fi;

cd -

git congif --global credential.helper store

expect <<- DONE
set timeout -1

spawn git clone $repository

expect "Username*"
send -- "$user"
send -- "\r"

expect "Password*"
send -- "$token"
send -- "\r"
expect eof
EOF

	chmod +x $file
	cd -
}

create_env(){
	cd $location
	cat << 'EOF' > var/.env
#[credentials]
user=
token=	
EOF
	cat << EOF > .gitignore 
var/.env
EOF

	chmod +x var/.env
	cd -
}

install(){
	case $1 in 
		dep) if [ ! $dep = True ]; then
			error missing dep
			exit 0
		     else
			install git $location; install env $location;
		     fi;;

		git) if [ $git_remote = True ]; then
			read -p "The script already exists. You want to recreate it? Y|y" input
			if [ $input = Y ] ||  [ $input = y ]; then create_script $location; fi
		     else
			create_script $location
		     fi;;
		
		env) if [ ! $env_file = True ]; then
			mkdir $location/var
			create_env $location
		     fi;;

		*) ;;
	esac		
}

read -p "You are going to install the script. Please accept Y|y " input
if [ $input = Y ] || [ $input = y ]; then
	checkers $dep $git_remote $env_file $location
	install dep $dep $git_remote $env_file $location
fi;
